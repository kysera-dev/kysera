name: CLI Release

on:
  push:
    tags:
      - 'cli-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string
      prerelease:
        description: 'Mark as prerelease'
        required: false
        type: boolean
        default: false

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          # Rebuild better-sqlite3 for the current platform
          pnpm rebuild better-sqlite3 --recursive

      - name: Run tests
        run: |
          cd apps/cli
          pnpm test:unit
          pnpm test:integration

      - name: Build
        run: |
          cd apps/cli
          pnpm build

  release:
    name: Release
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          # Rebuild better-sqlite3 for the current platform
          pnpm rebuild better-sqlite3 --recursive

      - name: Build CLI
        run: |
          cd apps/cli
          pnpm build

      - name: Configure npm
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm config set access public

      - name: Publish to npm
        run: |
          cd apps/cli
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: '@kysera/cli v${{ github.event.inputs.version || github.ref_name }}'
          body: |
            ## What's Changed

            See [CHANGELOG.md](https://github.com/kysera/kysera/blob/main/apps/cli/CHANGELOG.md) for details.

            ## Installation

            ```bash
            npm install -g @kysera/cli@${{ github.event.inputs.version || github.ref_name }}
            ```

            ## Quick Start

            ```bash
            kysera init my-app --dialect postgres
            ```
          prerelease: ${{ github.event.inputs.prerelease || false }}
          generate_release_notes: true
          files: |
            apps/cli/dist/**
            apps/cli/README.md
            apps/cli/CHANGELOG.md

  docker:
    name: Build Docker Image
    needs: release
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: apps/cli
          push: true
          tags: |
            ghcr.io/kysera/cli:latest
            ghcr.io/kysera/cli:${{ github.event.inputs.version || github.ref_name }}
          labels: |
            org.opencontainers.image.source=https://github.com/kysera/kysera
            org.opencontainers.image.description=Kysera CLI - Comprehensive CLI for Kysera ORM
            org.opencontainers.image.version=${{ github.event.inputs.version || github.ref_name }}